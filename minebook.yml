---
- name: Setup Minecraft Server
  hosts: mine
  become: yes
  vars:
    minecraft_dir: /opt/minecraft
    google_drive_base_url: "https://docs.google.com/uc?export=download&id="

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Upgrade all packages
      apt:
        upgrade: dist

    - name: Remove unnecessary packages
      apt:
        autoremove: yes

    - name: Clean up the local repository of retrieved package files
      apt:
        autoclean: yes

    - name: Install UFW
      apt:
        name:
          - ufw
        state: present

    - name: Allow OpenSSH through UFW
      ufw:
        rule: allow
        name: OpenSSH

    - name: Allow port 25565 through UFW
      ufw:
        rule: allow
        port: 25565
        proto: tcp

    - name: Enable UFW
      ufw:
        state: enabled

    - name: Install OpenJDK
      apt:
        name:
          - openjdk-21-jdk
          - openjdk-21-jre
        state: present

    - name: Create /opt/minecraft directory
      file:
        path: "{{ minecraft_dir }}"
        state: directory
        owner: root
        group: root
        mode: '0755'
    - name: Download Forge installer
      command: >
        wget --no-check-certificate
        '{{ google_drive_base_url }}188dnI3c8UWW19cd1SmnjftsubIi9nbJd'
        -O installer.jar
      args:
        chdir: "{{ minecraft_dir }}"
      register: download_result

    - name: Run Forge installer
      command: java -jar installer.jar --installServer
      args:
        chdir: "{{ minecraft_dir }}"
      register: install_result
      ignore_errors: true

    - name: Re-download Forge installer if running installer failed
      command: >
        wget --no-check-certificate
        '{{ google_drive_base_url }}188dnI3c8UWW19cd1SmnjftsubIi9nbJd'
        -O installer.jar
      args:
        chdir: "{{ minecraft_dir }}"
      register: download_result
      when: install_result.rc != 0  # Выполняется только если установка не удалась

    - name: Retry running Forge installer after re-download
      command: java -jar installer.jar --installServer
      args:
        chdir: "{{ minecraft_dir }}"
      register: install_result_retry
      when: install_result.rc != 0  # Выполняется только если не удалось установить с первого раза

    - name: Final check if Forge installer succeeded
      debug:
        msg: "Forge installer ran successfully"
      when: install_result.rc == 0 or install_result_retry.rc == 0

    - name: Handle failure if Forge installer did not succeed
      fail:
        msg: "Forge installer failed after re-download and retries"
      when: install_result.rc != 0 and install_result_retry.rc != 0

    - name: Rename forge file to server.jar
      shell: mv forge* server.jar
      args:
        chdir: "{{ minecraft_dir }}"

    - name: Get free memory
      command: free -m
      register: free_memory_output

    - name: Parse free memory
      set_fact:
        free_memory: "{{ free_memory_output.stdout_lines[1].split()[3] }}"

    - name: Calculate adjusted free memory
      set_fact:
        adjusted_free_memory: "{{ free_memory | int - 50 }}"

    - name: Show free memory
      debug:
        msg: "Free memory: {{ free_memory }} MB"

    - name: First time run server
      command: java -Xms{{ adjusted_free_memory }}M -Xmx{{ adjusted_free_memory }}M -jar server.jar nogui
      args:
        chdir: "{{ minecraft_dir }}"

    - name: Accept EULA
      lineinfile:
        path: "{{ minecraft_dir }}/eula.txt"
        regexp: '^eula=false'
        line: 'eula=true'

    - name: Second time run server and check
      block:
        - name: Second time run server
          command: java -Xms{{ adjusted_free_memory }}M -Xmx{{ adjusted_free_memory }}M -jar server.jar nogui
          args:
            chdir: "{{ minecraft_dir }}"
          async: 60  # Устанавливаем время ожидания в 60 секунд
          poll: 0    # Немедленно возвращаем управление, не ждем завершения команды
          register: server_run

        - name: Wait for second server run task to finish or timeout
          async_status:
            jid: "{{ server_run.ansible_job_id }}"
          register: job_result
          until: job_result.finished
          retries: 10  # Количество попыток
          delay: 6     # Задержка между попытками
          ignore_errors: true

      rescue:
        - name: Kill server if still running after timeout
          shell: kill -SIGTERM $(ps aux | grep '[s]erver.jar' | awk '{print $2}')
          when: not job_result.finished  # Выполняется только если задача не завершилась
          ignore_errors: true  # Игнорируем ошибки, если процесса нет

        - name: Notify if second server run task was skipped due to timeout
          debug:
            msg: "Second server run task was skipped due to exceeding the 60-second timeout."
          when: not job_result.finished  # Сообщение только если задача была пропущена

      always:
        - name: Ensure server is stopped
          shell: kill -SIGTERM $(ps aux | grep '[s]erver.jar' | awk '{print $2}')
          ignore_errors: true

    - name: Update server.properties
      blockinfile:
        path: "{{ minecraft_dir }}/server.properties"
        marker: "# {mark} ANSIBLE MANAGED BLOCK"
        block: |
          online-mode=false
          server-ip={{ ansible_default_ipv4.address }}
          resource-pack=https://docs.google.com/uc?export=download&id=1JqCplU0qCS-EajJvN4RRogjO0Xl-yAMk
        create: yes

    - name: Download mods
      get_url:
        url: '{{ google_drive_base_url }}1zfDPX_UVQVvRTcXwrVRlAbh6LERbQY93'
        dest: "{{ minecraft_dir }}/mods/"
        mode: '0644'
        owner: root
        group: root

    - name: Start Minecraft server and handle errors
      block:
        - name: Start Minecraft server
          command: java -Xms{{ adjusted_free_memory }}M -Xmx{{ adjusted_free_memory }}M -jar server.jar nogui
          args:
            chdir: "{{ minecraft_dir }}"
          register: server_run_result
          ignore_errors: true

      rescue:
        - name: Notify server stopped due to error
          debug:
            msg: "Сервер успешно остановлен."

